---
title: "ncORF Expression Patterns"
editor: source
editor_options: 
  chunk_output_type: console
---

## RNA-Seq expression quantification with salmon
```{bash}
# human
for i in human_salmon_quant/ERR*_1.fastq.gz; do j=$(basename $i); echo salmon quant -p4 --seqBias --gcBias --posBias -i /nfs_data/database/ref_genomes/human_GRCh38p13/ens107/salmon_index -l A -1 $j -2 ${j%%_1.fastq.gz}_2.fastq.gz -o ${j%%_1.fastq.gz};done>01_human_salmon_quant.sh
# mouse
for i in ERR*.trim.fq.gz; do echo salmon quant -p8 --seqBias --gcBias --posBias -l A -i /nfs_data/database/ref_genomes/mouse_GRCm39/ens107/salmon_index -r $i -o ${i%%.trim.fq.gz}; done >02_salmon_quant.sh
```

## Ribo-Seq Psite counts with custom scripts
see: https://github.com/gxelab/scripts/blob/main/bigwig_sum_orf.py

## summarise gene salmon quant
```{r}
library(tidyverse)

# human
salmon_quant_dtt <- function(x){                                                             
  dtt <- read_tsv(x)                                                   
}
SRR_files <- list.files('human_salmon_quant/transcript_quant/', pattern = '.sf' , full.names = T)
names(SRR_files) <- sub('human_salmon_quant/transcript_quant/.*', '', basename(SRR_files))
sum_data <- bind_rows(lapply(SRR_files, salmon_quant_dtt), .id = 'id') %>%   
  mutate(id = gsub('.quant.sf', '', id))

trans_quant <- sum_data %>%
  mutate(Name = sub("\\.\\d*", "", Name)) %>%
  left_join(hbiomart, by = c("Name" = 'Transcript stable ID')) %>% 
  group_by(`Gene stable ID`, id) %>% 
  summarise(gene_counts = sum(TPM)) %>% 
  mutate(id = sub("_.*", '', id)) %>%
  group_by(id, `Gene stable ID`) %>% 
  summarize(gene_counts_mean = mean(gene_counts)) %>%
  pivot_wider(names_from = "id", values_from = gene_counts_mean)
write_tsv(trans_quant, "human_gene_sum_tpm.tsv")

# mouse
salmon_quant_dtt <- function(x){                                                             
  dtt <- read_tsv(x)                                                   
}
SRR_files <- list.files('transcript_quant/', pattern = '.sf' , full.names = T)
names(SRR_files) <- sub('transcript_quant/.*', '', basename(SRR_files))
sum_data <- bind_rows(lapply(SRR_files, salmon_quant_dtt), .id = 'id') %>%   
  mutate(id = gsub('.quant.sf', '', id))
tissue <- read_tsv("a_drift_proteome_map_of_mouse.txt") %>%
  select(1,31)
sum_data <- sum_data %>%  
  mutate(Name = sub("\\.\\d*", "", Name)) 
  left_join(mbiomart, by = c("Name" = "Transcript stable ID")) %>% 
  group_by(`Gene stable ID`, id) %>% 
  summarise(gene_counts = sum(TPM))
sum_data_tissue <- sum_data %>%full_join(tissue, by = c("id" = "Comment[ENA_RUN]"))%>%
  select(-2)
trans_quant <- sum_data_tissue %>%
  pivot_wider(names_from = `Source Name`, values_from = TPM)
write_tsv(trans_quant, "mouse_gene_sum_tpm.tsv")
```

## summarise ORF Psite counts
```{r}
# human
human_featurecounts <- read.table("data/expression/human_all_bam_featureCounts_CDS.txt", header = T)
human_ncorf <- read_tsv("data/predict_output/human_three_methods_ncorf.tsv") %>%
  distinct(tx_name)
hcds_counts_all <- human_featurecounts[, c(1,6,7:457)] %>%
  inner_join(human_ncorf, by = c("Geneid" = "tx_name"))
colnames(hcds_counts_all) <- gsub("Aligned.sortedByCoord.out.bam", "", colnames(hcds_counts_all))
colnames(hcds_counts_all) <- gsub("_1", "", colnames(hcds_counts_all))
colnames(hcds_counts_all) <- gsub("X.nfs_data.leity.poj.forecast.data.riboseq.results.human.STAR.", "", colnames(hcds_counts_all))
row.names(hcds_counts_all) <- hcds_counts_all$Geneid
hcds_counts <- hcds_counts_all[,-(1:2)]
hcds_counts <- as.data.frame(t(hcds_counts))
hcds_counts$sample <- rownames(hcds_counts)

hcds_count <- hcds_counts %>%
  inner_join(human_tissue, by = c("sample" = "run_acc")) %>%
  dplyr::select(-sample)
rownames(hcds_count) <- hcds_count$re_tissue
hcds_count <- hcds_count[,-7381] ## hcds_count <- hcds_count[,-110266]
hcds_count <- as.data.frame(t(hcds_count))
colnames(hcds_count) <- gsub("_.*", "",colnames(hcds_count))
hcds_count <- data.frame(t(rowsum(t(hcds_count), group = colnames(hcds_count))))
write_tsv(hcds_count, "results/expression/human_RPF_cds_counts.tsv")

human_orf <- read.table("data/expression/human_all_bam_featureCounts_RPF_ncorf.txt", header = T)
horf_counts <- human_orf[, c(1,6,7:457)] 
colnames(horf_counts) <- gsub("Aligned.sortedByCoord.out.bam", "", colnames(horf_counts))
colnames(horf_counts) <- gsub("X.nfs_data.leity.poj.forecast.data.riboseq.results.human.STAR.", "", colnames(horf_counts))
row.names(horf_counts) <- horf_counts$Geneid
horf_counts <- horf_counts[,-(1:2)]
horf_counts <- as.data.frame(t(horf_counts))
horf_counts$sample <- rownames(horf_counts)
horf_count <- horf_counts %>%
  inner_join(human_tissue, by = c("sample" = "run_acc")) %>%
  dplyr::select(-sample)
rownames(horf_count) <- horf_count$re_tissue
horf_count <- horf_count[,-13072]
horf_count <- as.data.frame(t(horf_count))
colnames(horf_count) <- gsub("_.*", "",colnames(horf_count))
horf_count <- data.frame(t(rowsum(t(horf_count), group = colnames(horf_count))))
write_tsv(horf_count, "results/expression/human_RPF_ncorf_counts.tsv")

# mouse
mouse_featurecounts <- read.table("data/expression/mouse_all_bam_featureCounts_CDS.txt", header = T)
mouse_ncorf <- read_tsv("data/predict_output/mouse_three_methods_ncorf.tsv") %>%
  distinct(tx_name)
mcds_counts_all <- mouse_featurecounts[, c(1,6,7:465)] %>%
  inner_join(mouse_ncorf, by = c("Geneid" = "tx_name"))
colnames(mcds_counts_all) <- gsub("Aligned.sortedByCoord.out.bam", "", colnames(mcds_counts_all))
colnames(mcds_counts_all) <- gsub("_1", "", colnames(mcds_counts_all))
colnames(mcds_counts_all) <- gsub("X.nfs_data.leity.poj.forecast.data.riboseq.results.mouse.STAR.", "", colnames(mcds_counts_all))
row.names(mcds_counts_all) <- mcds_counts_all$Geneid
mcds_counts <- mcds_counts_all[,-(1:2)]
mcds_counts <- as.data.frame(t(mcds_counts))
mcds_counts$sample <- rownames(mcds_counts)
mcds_count <- mcds_counts %>%
  inner_join(mouse_tissue, by = c("sample" = "run_acc")) %>%
  dplyr::select(-sample)
rownames(mcds_count) <- mcds_count$re_tissue
mcds_count <- mcds_count[,-9052] # mcds_count <- mcds_count[,-67153]
mcds_count <- as.data.frame(t(mcds_count))
colnames(mcds_count) <- gsub("_.*", "",colnames(mcds_count))
mcds_count <- data.frame(t(rowsum(t(mcds_count), group = colnames(mcds_count))))
write_tsv(mcds_count, "results/expression/mouse_RPF_cds_counts.tsv")

mouse_orf <- read.table("data/expression/mouse_all_bam_featureCounts_RPF_ncorf.txt", header = T)
morf_counts <- mouse_orf[, c(1,6,7:465)] 
colnames(morf_counts) <- gsub("Aligned.sortedByCoord.out.bam", "", colnames(morf_counts))
colnames(morf_counts) <- gsub("X.nfs_data.leity.poj.forecast.data.riboseq.results.mouse.STAR.", "", colnames(morf_counts))
row.names(morf_counts) <- morf_counts$Geneid
morf_counts <- morf_counts[,-(1:2)]
morf_counts <- as.data.frame(t(morf_counts))
morf_counts$sample <- rownames(morf_counts)
morf_count <- morf_counts %>%
  inner_join(mouse_tissue, by = c("sample" = "run_acc")) %>%
  dplyr::select(-sample)
rownames(morf_count) <- morf_count$re_tissue
morf_count <- morf_count[,-17675]
morf_count <- as.data.frame(t(morf_count))
colnames(morf_count) <- gsub("_.*", "",colnames(morf_count))
morf_count <- data.frame(t(rowsum(t(morf_count), group = colnames(morf_count))))
write_tsv(morf_count, "results/expression/mouse_RPF_ncorf_counts.tsv")
```


## summarize
```{r}
# done by LeiTT based on ncORF annotation v2412

library(data.table)
library(stringr)

## gene & ncORF info
txinfo_hsa <- fread('data/Homo_sapiens.GRCh38.107.txinfo.full.tsv')
txrep_hsa <- fread('data/Homo_sapiens.GRCh38.107.txinfo.rep.pcg.tsv')

txinfo_mmu <- fread('data/Mus_musculus.GRCm39.107.txinfo.full.tsv')
txrep_mmu <- fread('data/Mus_musculus.GRCm39.107.txinfo.rep.pcg.tsv')

ncorf_human <- fread('data/ncorf_v2412/human_three_methods_ncorf.final.tsv')
ncorf_mouse <- fread('data/ncorf_v2412/mouse_three_methods_ncorf.final.tsv')

ncorf_human[, gstart := as.integer(tstrsplit(uid_start, '_')[[2]])]
ncorf_mouse[, gstart := as.integer(tstrsplit(uid_start, '_')[[2]])]

# obtain CDS start and end information
cds_human <- fread('data/Homo_sapiens.GRCh38.107.gtf.gz', skip = 1, header = FALSE)
cds_human <- cds_human[V3 == 'CDS']
cds_human[, tx_name := str_extract(V9, 'transcript_id "(ENST\\d+)"', group = 1)]
cds_human <- cds_human[, .(
    start = ifelse(V7[1] == '+', min(V4), max(V5)),
    end = ifelse(V7[1] == '+', max(V5), min(V4))), by = .(tx_name)]
txrep_hsa[cds_human, `:=`(start = i.start, end = i.end), on = .(tx_name)]

# CDS overlap
cdsovlp_human <- fread('data/ncorf_annot/human_three_methods_ncorf.cds_overlap.tsv', header = FALSE)
cdsovlp_human <- cdsovlp_human[V13 > 0]

cdsovlp_mouse <- fread('data/ncorf_annot/mouse_three_methods_ncorf.cds_overlap.tsv', header = FALSE)
cdsovlp_mouse <- cdsovlp_mouse[V13 > 0]


## analysis
# the following samples have too few reads and were excluded from the analysis:
# - human: skeletal muscle
# - mouse: cortex

txl_cds_human <- fread('data/expression_psite/human_RPF_cds_counts.tsv.gz') # path to be updated
txl_cds_human[, `Skeketal muscle` := NULL]
sname_old_human <- c(
    'Hs578t', 'MCardiac fibroblasts7', 'Molm13', 'Lymphoblastoid cell line',
    "B lymphoblastoid cell line", "Aortic endothelial cell",
    "Coronary artery endothelial cell", "Umbilical vein endothelial", "Fat")
sname_new_human <- c(
    'Hs578T', 'MCF7', 'MOLM-13', 'LCL', "B721.221", 'Aortic EC',
    'Coronary artery EC', "Umbilical vein EC", "Adipose tissue")
setnames(txl_cds_human, sname_old_human, sname_new_human)

txl_cds_human <- txl_cds_human[txid %in% txrep_hsa$tx_name]
txl_cds_human[txrep_hsa, `:=`(uid = i.gene_id, len = i.tx_len), on = .(txid = tx_name)]
txl_cds_human[, txid := NULL]
txl_cds_human[, gtype := 'CDS']

txl_orf_human <- fread('data/expression_psite/human_RPF_ncorf_counts.tsv.gz') # path to be updated
txl_orf_human[, `Skeketal muscle` := NULL]
setnames(txl_orf_human, sname_old_human, sname_new_human)
txl_orf_human <- txl_orf_human[uid %in% ncorf_human$uid]
txl_orf_human[ncorf_human, len := i.orf_len, on = .(uid)]
txl_orf_human[, gtype := 'ncORF']

txl_human <- rbind(txl_cds_human, txl_orf_human)
txl_human[, total_cnts := rowSums(.SD),
          .SDcols = setdiff(colnames(txl_human), c('uid', 'len', 'gtype'))]

txlmat_human <- as.matrix(txl_human[, !c('uid', 'len', 'gtype', 'total_cnts')])
sf_human <- DESeq2::estimateSizeFactorsForMatrix(txlmat_human[txl_human$gtype == 'CDS' & rowSums(txlmat_human) > 100, ])
txlmat_human <- sweep(txlmat_human, 2, sf_human, '/')
txl_norm_human <- cbind(as.data.table(txlmat_human), txl_human[, .(uid, len, gtype)])

fwrite(txl_norm_human, 'results/human_RPF_counts_norm_cds_ncorf.tsv', sep = '\t')


txl_cds_mouse <- fread('data/expression_psite/mouse_RPF_cds_counts.tsv.gz') # path to be updated
txl_cds_mouse[, Cortex := NULL]
sname_old_mouse <- c(
    'Flt3L DC', 'PMB', 'TALL', 'X3T3 cell', 'NeoCortex')
sname_new_mouse <- c('FLT3L-DC', 'CD19+ B cell', 'T-ALL', '3T3', 'Neocortex')
setnames(txl_cds_mouse, sname_old_mouse, sname_new_mouse)

txl_cds_mouse <- txl_cds_mouse[txid %in% txrep_mmu$tx_name]
txl_cds_mouse[txrep_mmu, `:=`(uid = i.gene_id, len = i.tx_len), on = .(txid = tx_name)]
txl_cds_mouse[, txid := NULL]
txl_cds_mouse[, gtype := 'CDS']

txl_orf_mouse <- fread('data/expression_psite/mouse_RPF_ncorf_counts.tsv.gz') # path to be updated
txl_orf_mouse[, Cortex := NULL]
setnames(txl_orf_mouse, sname_old_mouse, sname_new_mouse)
txl_orf_mouse <- txl_orf_mouse[uid %in% ncorf_mouse$uid]
txl_orf_mouse[ncorf_mouse, len := i.orf_len, on = .(uid)]
txl_orf_mouse[, gtype := 'ncORF']

txl_mouse <- rbind(txl_cds_mouse, txl_orf_mouse)
txl_mouse[, total_cnts := rowSums(.SD),
          .SDcols = setdiff(colnames(txl_mouse), c('uid', 'len', 'gtype'))]

txlmat_mouse <- as.matrix(txl_mouse[, !c('uid', 'len', 'gtype', 'total_cnts')])
sf_mouse <- DESeq2::estimateSizeFactorsForMatrix(txlmat_mouse[txl_mouse$gtype == 'CDS' & rowSums(txlmat_mouse) > 100, ])
txlmat_mouse <- sweep(txlmat_mouse, 2, sf_mouse, '/')
txl_norm_mouse <- cbind(as.data.table(txlmat_mouse), txl_mouse[, .(uid, len, gtype)])

fwrite(txl_norm_mouse, 'results/mouse_RPF_counts_norm_cds_ncorf.tsv', sep = '\t')
```

# Analysis
```{r}
library(data.table)
library(ggplot2)
library(patchwork)
library(cols4all)
#library(circlize)
library(stringr)
#library(ComplexHeatmap)
library(RColorBrewer)
library(forcats)

theme_set(theme_classic(base_size = 12) + theme(
    axis.text = element_text(color = 'black'),
    strip.background = element_blank(),
    strip.text = element_text(size = 12),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)))
```

## gene & ncORF info
```{r}
txinfo_hsa <- fread('data/Homo_sapiens.GRCh38.107.txinfo.full.tsv')
txrep_hsa <- fread('data/Homo_sapiens.GRCh38.107.txinfo.rep.pcg.tsv')

txinfo_mmu <- fread('data/Mus_musculus.GRCm39.107.txinfo.full.tsv')
txrep_mmu <- fread('data/Mus_musculus.GRCm39.107.txinfo.rep.pcg.tsv')

ncorf_human <- fread('data/ncorf_v2412/human_three_methods_ncorf.final.meta.tsv')
ncorf_mouse <- fread('data/ncorf_v2412/mouse_three_methods_ncorf.final.meta.tsv')

ncorf_human[, egrp := ifelse(phylocsf > 0 & bls_local > 0.9, 'LSC', 'Other')]
ncorf_mouse[, egrp := ifelse(phylocsf > 0 & bls_local > 0.9, 'LSC', 'Other')]

# read translation dataset
txl_norm_human <- fread('data/expression_psite/human_RPF_counts_norm_cds_ncorf_all.tsv.gz')
txl_norm_mouse <- fread('data/expression_psite/mouse_RPF_counts_norm_cds_ncorf_all.tsv.gz')
```

## Proportion of translated ORFs
criteria: RPKM >= 1
```{r}
calc_rpkm <- function(dtt){
    m <- as.matrix(dtt[, !c('uid', 'len', 'gtype')])
    # as the counts are normalized, we will use a universal median library size
    libsize <- median(colSums(m))
    m <- m / dtt$len / libsize * 1e9
    cbind(as.data.table(m), dtt[, .(uid, len, gtype)])
}

combine_exp <- function(dtt_norm, dtt_rpkm){
    long1 <- melt(dtt_norm, id.vars = c('uid', 'len', 'gtype'),
                  variable.name = 'sample', value.name = 'cnt_norm', variable.factor = FALSE)
    long2 <- melt(dtt_rpkm, id.vars = c('uid', 'len', 'gtype'),
                  variable.name = 'sample', value.name = 'rpkm', variable.factor = FALSE)
    dtt <- merge(long1, long2, by = c('uid', 'len', 'gtype', 'sample'))
    return(dtt)
}

# human 
txl_rpkm_human <- calc_rpkm(txl_norm_human)
comb_human <- combine_exp(txl_norm_human, txl_rpkm_human)

comb_human_summary <- comb_human[, .(
    total = .N, translated = sum(rpkm >= 1)), by = .(sample, gtype)]
comb_human_summary[, prop := translated/total]

# mouse
txl_rpkm_mouse <- calc_rpkm(txl_norm_mouse)
comb_mouse <- combine_exp(txl_norm_mouse, txl_rpkm_mouse)

comb_mouse_summary <- comb_mouse[, .(
    total = .N, translated = sum(rpkm >= 1)), by = .(sample, gtype)]
comb_mouse_summary[, prop := translated/total]

p1 <- ggplot(comb_human_summary, aes(x = prop, y = sample, fill = gtype)) +
    geom_col(position = position_dodge(width = 0.75), width = 0.75) +
    scale_x_continuous(labels = scales::percent) +
    labs(x = 'Translated ORFs', y = NULL, fill = NULL, title = 'Human') +
    scale_fill_discrete_c4a_cat('carto.vivid')

p2 <- ggplot(comb_mouse_summary, aes(x = prop, y = sample, fill = gtype)) +
    geom_col(position = position_dodge(width = 0.75), width = 0.75) +
    scale_x_continuous(labels = scales::percent) +
    labs(x = 'Translated ORFs', y = NULL, fill = NULL, title = 'Mouse') +
    scale_fill_discrete_c4a_cat('carto.vivid')

p1 + p2 + plot_layout(guides = 'collect')
ggsave('figures/prop_translated_orfs_per_sample.pdf', width = 8, height = 8)

comb_human_summary[, as.list(summary(prop)), by = .(gtype)]
# "  gtype      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
#    <char>     <num>     <num>     <num>     <num>     <num>     <num>
# 1:  ncORF 0.5317904 0.7018197 0.7275660 0.7194844 0.7401919 0.8348103
# 2:    CDS 0.4752606 0.5109994 0.5232222 0.5328195 0.5333529 0.6508589"

comb_mouse_summary[, as.list(summary(prop)), by = .(gtype)]
#     gtype      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
#    <char>     <num>     <num>     <num>     <num>     <num>     <num>
# 1:  ncORF 0.1245375 0.4038368 0.5213224 0.4852824 0.6130422 0.7600243
# 2:    CDS 0.3507835 0.4448340 0.4949697 0.4844079 0.5203437 0.5947739
```

## Average Expression x Evolution
```{r}
# human mean translation RPKM
txl_mean_human <- txl_norm_human[, .(uid, len, gtype)]
txl_mean_human[, mean_counts := rowMeans(txl_norm_human[
    , !colnames(txl_norm_human) %in% colnames(txl_mean_human), with = FALSE])]
txl_mean_human[, mean_rpkm := mean_counts / sum(mean_counts) / len * 1e9]

atab_human <- merge(ncorf_human, txl_mean_human[, .(uid, mean_rpkm, mean_counts)], by = 'uid')

# mouse mean translation RPKM
txl_mean_mouse <- txl_norm_mouse[, .(uid, len, gtype)]
txl_mean_mouse[, mean_counts := rowMeans(txl_norm_mouse[
    , !colnames(txl_norm_mouse) %in% colnames(txl_mean_mouse), with = FALSE])]
txl_mean_mouse[, mean_rpkm := mean_counts / sum(mean_counts) / len * 1e9]

atab_mouse <- merge(ncorf_mouse, txl_mean_mouse[, .(uid, mean_rpkm, mean_counts)], by = 'uid')

# correlations
atab_human[, cor.test(mean_rpkm, phylocsf_pc, method = 'spearman')]
atab_human[, cor.test(mean_rpkm, phylocsf, method = 'spearman')]
atab_human[, cor.test(mean_rpkm, bls_local, method = 'spearman')]
atab_human[, cor.test(mean_rpkm, bls_global, method = 'spearman')]

ggplot(atab_human, aes(x = mean_rpkm, y = bls_local)) +
    geom_hex() +
    scale_x_log10() +
    scale_fill_viridis_c(trans = 'log1p')

ggplot(atab_human, aes(x = mean_rpkm, fill = bls_global > 0.5)) +
    geom_density(alpha = 0.6) +
    scale_x_log10()

atab_mouse[, cor.test(mean_rpkm, phylocsf_pc, method = 'spearman')]
atab_mouse[, cor.test(mean_rpkm, phylocsf, method = 'spearman')]
atab_mouse[, cor.test(mean_rpkm, bls_local, method = 'spearman')]
atab_mouse[, cor.test(mean_rpkm, bls_global, method = 'spearman')]

ggplot(atab_mouse, aes(x = mean_rpkm, y = bls_local)) +
    geom_hex() +
    scale_x_log10() +
    scale_fill_viridis_c(trans = 'log1p')

ggplot(atab_mouse, aes(x = mean_rpkm, fill = bls_global > 0.5)) +
    geom_density(alpha = 0.6) +
    scale_x_log10()

onetab <- rbindlist(list(Human = atab_human, Mouse = atab_mouse), id = 'species', fill = TRUE)
onetab[, age := factor(age, levels = unique(age)[order(readr::parse_number(unique(age)))] )]
onetab[, bls_global_grp := ifelse(bls_global > 0.5, '> 0.5', '< 0.5')]
onetab[, bls_local_grp := ifelse(bls_local > 0.5, '> 0.5', '< 0.5')]
onetab[, phylocsf_grp := ifelse(!is.na(phylocsf_pc) & phylocsf_pc > 0, '> 0', '< 0')]

ggplot(onetab, aes(x = species, y = mean_rpkm, fill = bls_global_grp)) +
    geom_violin(position = position_dodge(width = 0.8), width = 0.8) +
    geom_boxplot(position = position_dodge(width = 0.8), width = 0.1, outliers = FALSE) +
    scale_y_log10() +
    scale_fill_discrete_c4a_cat(palette = 'pastel', name = 'Global BLS') +
    labs(x = NULL, y = 'Average RPF RPKM')
ggsave('figures/average_RPF_RPKM_vs_global_BLS.pdf', width = 5, height = 3)

onetab[, .(two_sided = wilcox.test(mean_rpkm[bls_global > 0.5],
                                mean_rpkm[bls_global < 0.5])$p.value,
        f_greater = wilcox.test(mean_rpkm[bls_global > 0.5],
                                mean_rpkm[bls_global < 0.5], alternative = 'greater')$p.value
        ), by = .(species)]
#    species     two_sided     f_greater
#     <char>         <num>         <num>
# 1:   Human  1.084874e-22  5.424368e-23
# 2:   Mouse 3.896800e-158 1.948400e-158

ggplot(onetab, aes(x = species, y = mean_rpkm, fill = bls_local_grp)) +
    geom_violin(position = position_dodge(width = 0.8), width = 0.8) +
    geom_boxplot(position = position_dodge(width = 0.8), width = 0.1, outliers = FALSE) +
    scale_y_log10() +
    scale_fill_discrete_c4a_cat(palette = 'pastel', name = 'Local BLS') +
    labs(x = NULL, y = 'Average RPF RPKM')
ggsave('figures/average_RPF_RPKM_vs_local_BLS.pdf', width = 5, height = 3)

onetab[, .(two_sided = wilcox.test(mean_rpkm[bls_local > 0.5],
                                mean_rpkm[bls_local < 0.5])$p.value,
        f_greater = wilcox.test(mean_rpkm[bls_local > 0.5],
                                mean_rpkm[bls_local < 0.5], alternative = 'greater')$p.value
        ), by = .(species)]
#    species     two_sided     f_greater
#     <char>         <num>         <num>
# 1:   Human  2.996102e-11  1.498051e-11
# 2:   Mouse 1.219205e-240 6.096025e-241

ggplot(onetab, aes(x = species, y = mean_rpkm, fill = phylocsf_grp)) +
    geom_violin(position = position_dodge(width = 0.8), width = 0.8) +
    geom_boxplot(position = position_dodge(width = 0.8), width = 0.1, outliers = FALSE) +
    scale_y_log10() +
    scale_fill_discrete_c4a_cat(palette = 'pastel', name = 'PhyloCSF') +
    labs(x = NULL, y = 'Average RPF RPKM')
ggsave('figures/average_RPF_RPKM_vs_phylocsf.pdf', width = 5, height = 3)

onetab[, .(two_sided = wilcox.test(mean_rpkm[phylocsf_grp == '> 0'],
                                mean_rpkm[phylocsf_grp != '> 0'])$p.value,
        f_greater = wilcox.test(mean_rpkm[phylocsf_grp == '> 0'],
                                mean_rpkm[phylocsf_grp != '> 0'], alternative = 'greater')$p.value
        ), by = .(species)]
#    species   two_sided f_greater
#     <char>       <num>     <num>
# 1:   Human 0.004128573 0.9979358
# 2:   Mouse 0.022724466 0.9886379

ggplot(onetab, aes(x = species, y = mean_rpkm, fill = origin)) +
    geom_violin(position = position_dodge(width = 0.8), width = 0.8) +
    geom_boxplot(position = position_dodge(width = 0.8), width = 0.1, outliers = FALSE) +
    scale_y_log10() +
    scale_fill_discrete_c4a_cat(palette = 'pastel', name = 'Origin manner') +
    labs(x = NULL, y = 'Average RPF RPKM')
ggsave('figures/average_RPF_RPKM_vs_origin.pdf', width = 5, height = 3)

onetab[, {
    f <- split(mean_rpkm, f = origin)
    names(f) <- c('x', 'y')  # x: de novo, y: non-denovo
    list(two_sided = do.call(wilcox.test, f)$p.value,
        f_greater = do.call(wilcox.test,c(f, list(alternative = 'less')))$p.value)
}, by = .(species)]
#    species    two_sided    f_greater
#     <char>        <num>        <num>
# 1:   Human 2.594587e-47 1.297293e-47
# 2:   Mouse 6.840349e-71 3.420174e-71


tmp <- onetab[!age %in% c('hg38', 'mm39'), .(
              pval = wilcox.test(mean_rpkm[bls_local > 0.5],
                                 mean_rpkm[bls_local < 0.5])$p.value), by = .(species, age)]
tmp[, plab := cut(pval, breaks = c(0, 0.001, 0.01, 0.05, 1), labels = c('***', '**', '*', ''))]
tmp[, mean_rpkm := 1000]

ggplot(onetab[!age %in% c('hg38', 'mm39')], aes(x = age, y = mean_rpkm)) +
    geom_boxplot(aes(fill = bls_local_grp), outliers = FALSE) +
    geom_text(data = tmp, aes(label = plab)) +
    scale_y_log10(breaks = c(0.1, 1, 10, 100, 1000),
                  labels = c(expression(10^-1), expression(10^0),
                             expression(10^1), expression(10^2), expression(10^3))) +
    scale_fill_discrete_c4a_cat(palette = 'pastel', name = 'Local BLS') +
    facet_wrap(vars(species), scales = 'free') +
    labs(x = NULL, y = 'Mean translation level')
ggsave('figures/ncorf_age_bls_vs_mean_rpkm.pdf', width = 13, height = 3)

tmp <- onetab[!age %in% c('hg38', 'mm39'), .(
              pval = wilcox.test(mean_rpkm[phylocsf > 0],
                                 mean_rpkm[phylocsf < 0])$p.value), by = .(species, age)]
tmp[, plab := cut(pval, breaks = c(0, 0.001, 0.01, 0.05, 1), labels = c('***', '**', '*', ''))]
tmp[, mean_rpkm := 1000]
ggplot(onetab[!age %in% c('hg38', 'mm39')], aes(x = age, y = mean_rpkm)) +
    geom_boxplot(aes(fill = phylocsf_grp), outliers = FALSE) +
    geom_text(data = tmp, aes(label = plab)) +
    scale_y_log10(breaks = c(0.1, 1, 10, 100, 1000),
                  labels = c(expression(10^-1), expression(10^0),
                             expression(10^1), expression(10^2), expression(10^3))) +
    scale_fill_discrete_c4a_cat(palette = 'pastel', name = 'PhyloCSF') +
    facet_wrap(vars(species), scales = 'free') +
    labs(x = NULL, y = 'Mean translation level')
ggsave('figures/ncorf_age_phylocsf_vs_mean_rpkm.pdf', width = 13, height = 3)
```
conclusion: conserved ncORFs are translated at higher level;


## tissue specificity
```{r}
calc_tau <- function(m){
    m <- log1p(m)
    m <- m/apply(m, 1, max)
    tau <- rowSums(1 - m) /(ncol(m) - 1)
    return(tau)
}

rna_tau <- function(dtt, cutoff = 1){
    m <- as.matrix(dtt[, -1, with = FALSE])
    tau <- calc_tau(m)
    data.table(id = dtt[[1]],
               tau_rna = tau,
               ns_rna = rowSums(m >= cutoff),
               nz_rna = rowSums(m > 0),
               max_rna = colnames(m)[apply(m, 1, which.max)])
}

rpf_tau <- function(dtt1, dtt2, cutoff = 1){
    ecols <- c('uid', 'len', 'gtype')
    m1 <- as.matrix(dtt1[, !..ecols])
    tau <- calc_tau(m1)
    m2 <- as.matrix(dtt2[, !..ecols])
    data.table(id = dtt1[['uid']],
               tau_rpf = tau,
               ns_rpf = rowSums(m2 >= cutoff),
               nz_rpf = rowSums(m2 > 0),
               max_rpf = colnames(m1)[apply(m1, 1, which.max)])
}

path_txp_human <- 'data/expression/human_salmon_quant_32_tissues.tsv.gz'
path_txp_mouse <- 'data/expression/mouse_salmon_quant_29_tissues.tsv.gz'
tau_tsp_human <- rna_tau(fread(path_txp_human))
tau_tsp_mouse <- rna_tau(fread(path_txp_mouse))

tau_txl_human <- rpf_tau(txl_norm_human, txl_rpkm_human)
tau_txl_mouse <- rpf_tau(txl_norm_mouse, txl_rpkm_mouse)

tmp1 <- ncorf_human[, .(uid, gene_id)]
tmp1[tau_tsp_human, `:=`(
    tau_rna = i.tau_rna, ns_rna = i.ns_rna, max_rna = i.max_rna), on = .(gene_id = id)]
tmp1[tau_txl_human, `:=`(
    tau_rpf = i.tau_rpf, ns_rpf = i.ns_rpf, max_rpf = i.max_rpf), on = .(uid = id)]

tmp2 <- ncorf_mouse[, .(uid, gene_id)]
tmp2[tau_tsp_mouse, `:=`(
    tau_rna = i.tau_rna, ns_rna = i.ns_rna, max_rna = i.max_rna), on = .(gene_id = id)]
tmp2[tau_txl_mouse, `:=`(
    tau_rpf = i.tau_rpf, ns_rpf = i.ns_rpf, max_rpf = i.max_rpf), on = .(uid = id)]

ncorf_tau <- rbind(Human = tmp1, Mouse = tmp2, idcol = 'species')
ncorf_tau[, c('gene_id') := NULL]
onetab <- onetab[ncorf_tau, on = .(uid, species)]

ggplot(onetab, aes(x = tau_rpf, y = tau_rna)) +
    geom_hex(stat = 'binhex', aes(fill = log10(after_stat(count)))) +
    geom_abline(slope = 1, intercept = 0, linetype = 2, color = 'red') +
    facet_wrap(vars(species)) +
    scale_fill_continuous_c4a_seq(
        'brewer.greens', breaks = c(0, 1, 2), labels = c(1, 10, 100)) +
    labs(x = 'Tau (translation)', y = 'Tau (transcription)', fill = 'N')
ggsave('figures/ncorf_tau_translation_vs_transcription.pdf', width = 6, height = 3)

onetab[, wilcox.test(tau_rna, tau_rpf)$p.value, by = .(species)]
# 1:   Human 4.344792e-103
# 2:   Mouse  0.000000e+00
# RNA < RPF in both cases


p1 <- ggplot(onetab[ns_rpf > 0], aes(x = bls_local_grp, y = tau_rpf)) +
    geom_violin(aes(fill = bls_local_grp), show.legend = FALSE) +
    geom_boxplot(width = 0.08, outliers = FALSE) +
    scale_fill_discrete_c4a_cat('carto.pastel') +
    facet_wrap(vars(species)) +
    labs(x = NULL, y = 'Tau (translation)', title = 'Local BLS')

p2 <- ggplot(onetab[ns_rpf > 0], aes(x = bls_global_grp, y = tau_rpf)) +
    geom_violin(aes(fill = bls_global_grp), show.legend = FALSE) +
    geom_boxplot(width = 0.08, outliers = FALSE) +
    scale_fill_discrete_c4a_cat('carto.pastel') +
    facet_wrap(vars(species)) +
    labs(x = NULL, y = 'Tau (translation)', title = 'GLobal BLS')

p3 <- ggplot(onetab[ns_rpf > 0], aes(x = phylocsf_grp, y = tau_rpf)) +
    geom_violin(aes(fill = phylocsf_grp), show.legend = FALSE) +
    geom_boxplot(width = 0.08, outliers = FALSE) +
    scale_fill_discrete_c4a_cat('carto.pastel') +
    facet_wrap(vars(species)) +
    labs(x = NULL, y = 'Tau (translation)', title = 'PhyloCSF')

p1 + p2 + p3
ggsave('figures/ncORF_conservation_vs_txl_specificity.pdf', width = 9, height = 3)


tmp <- onetab[ns_rpf > 0 & !age %in% c('hg38', 'mm39'), .(
              pval = wilcox.test(tau_rpf[phylocsf > 0],
                                 tau_rpf[phylocsf < 0])$p.value), by = .(species, age)]
tmp[, plab := cut(pval, breaks = c(0, 0.001, 0.01, 0.05, 1), labels = c('***', '**', '*', ''))]
tmp[, tau_rpf := 1]

ggplot(onetab[ns_rpf > 0 & !age %in% c('hg38', 'mm39')], aes(x = age, y = tau_rpf)) +
    geom_boxplot(aes(fill = phylocsf_grp), outliers = FALSE) +
    geom_text(data = tmp, aes(label = plab)) +
    scale_fill_discrete_c4a_cat(palette = 'pastel', name = 'PhyloCSF') +
    facet_wrap(vars(species), scales = 'free') +
    labs(x = NULL, y = 'Tau (translation)')
ggsave('figures/ncorf_age_phylocsf_vs_tau_rpf.pdf', width = 13, height = 3)

tmp <- onetab[ns_rpf > 0 & !age %in% c('hg38', 'mm39'), .(
              pval = wilcox.test(tau_rpf[bls_local > 0.5],
                                 tau_rpf[bls_local < 0.5])$p.value), by = .(species, age)]
tmp[, plab := cut(pval, breaks = c(0, 0.001, 0.01, 0.05, 1), labels = c('***', '**', '*', ''))]
tmp[, tau_rpf := 1]

ggplot(onetab[ns_rpf > 0 & !age %in% c('hg38', 'mm39')], aes(x = age, y = tau_rpf)) +
    geom_boxplot(aes(fill = bls_local_grp), outliers = FALSE) +
    geom_text(data = tmp, aes(label = plab)) +
    scale_fill_discrete_c4a_cat(palette = 'pastel', name = 'Local BLS') +
    facet_wrap(vars(species), scales = 'free') +
    labs(x = NULL, y = 'Tau (translation)')
ggsave('figures/ncorf_age_bls_vs_tau_rpf.pdf', width = 13, height = 3)

#' conclusion:
#'   ncORF translation has higher tissue-specificity than transcription;
#'   As ribo-seq samples are less and some were similar, tau of translation might be underestimated;
#' note:
#' bls > 0 can happen when age = hg38/mm39. For example, if the ncORF arises independently in different
#' lineages
```

## ncORF translation vs CDS
```{r}
ggplot(txl_mean_human, aes(x = mean_rpkm, fill = gtype)) +
    geom_histogram(position = 'identity') +
    scale_x_log10()

tmp <- txl_mean_human[gtype == 'ncORF']
tmp[ncorf_human, `:=`(orf_type = i.orf_type, gene_id = i.gene_id), on = .(uid)]
tmp <- tmp[orf_type %in% c('uORF', 'dORF')]
tmp[txl_mean_human, cds_rpkm := i.mean_rpkm, on = .(gene_id = uid)]

ggplot(tmp[orf_type == 'dORF'], aes(x = mean_rpkm, y = cds_rpkm)) +
    geom_point(size = 0.5, alpha = 0.2) +
    geom_abline(slope = 1, intercept = 0, linetype = 2, color = 'red') +
    scale_x_log10() +
    scale_y_log10()

ggplot(tmp[orf_type == 'uORF'], aes(x = mean_rpkm, y = cds_rpkm)) +
    geom_point(size = 0.5, alpha = 0.2) +
    geom_abline(slope = 1, intercept = 0, linetype = 2, color = 'red') +
    scale_x_log10() +
    scale_y_log10()

tmp2 <- txl_mean_human[gtype == 'CDS']
tmp2[, worf := uid %in% ncorf_human$gene_id]

ggplot(tmp2, aes(x = mean_rpkm, fill = worf)) +
    geom_histogram(position = 'identity') +
    scale_x_log10()

#' obsrvations:
#'   ncORFs are more likely to be found in highly translated genes
#'   uORFs are translated at higher levels than corresponding CDSs
#'   dORFs are translated at lower levels than corresponding CDSs
```

## WGCNA links
```{r}
bpnet_human <- fread('results/bpnet_human_edges.tsv.gz')
bpnet_human_stat <- bpnet_human[, .(ncot = .N), by = .(uid = uid1)]
bpnet_mouse <- fread('results/bpnet_mouse_edges.tsv.gz')
bpnet_mouse_stat <- bpnet_mouse[, .(ncot = .N), by = .(uid = uid1)]

onetab[bpnet_human_stat, ncot := i.ncot, on = .(uid)]
onetab[bpnet_mouse_stat, ncot := i.ncot, on = .(uid)]
onetab[is.na(ncot), ncot := 0L]
onetab[, ncot_grp := ifelse(ncot > 0, 'wlinks', 'None')]

ggplot(onetab, aes(x = phylocsf_pc, color = ncot_grp)) +
    geom_density(position = 'identity') +
    facet_wrap(vars(species), scales = 'free')

ggplot(onetab, aes(x = bls_local, color = ncot_grp)) +
    geom_density(position = 'identity') +
    facet_wrap(vars(species), scales = 'free')

ggplot(onetab, aes(x = bls_global, color = ncot_grp)) +
    geom_density(position = 'identity') +
    facet_wrap(vars(species), scales = 'free')

onetab[, age_grp := ifelse(
    (species == 'Human' & readr::parse_number(as.character(age)) <= 7) |
        (species == 'Mouse' & readr::parse_number(as.character(age)) <= 5),
    'Pre-mammalian', "Mammalian")]
onetab[, print(table(ncot_grp, age_grp)), by = .(species)]

onetab[, print(table(ncot_grp, age_grp)), by = .(species)]
# "       age_grp
# ncot_grp Mammalian Pre-mammalian
#   None        5210          5174
#   wlinks       562           677
#         age_grp
# ncot_grp Mammalian Pre-mammalian
#   None       10333          4336
#   wlinks      1013           803
onetab[, fisher.test(table(ncot_grp, age_grp))$p.value, by = .(species)]
# 1:   Human 1.435513e-03
# 2:   Mouse 3.296990e-35

onetab[, fisher.test(table(ncot_grp, bls_local_grp))$p.value, by = .(species)]
onetab[, fisher.test(table(ncot_grp, phylocsf_grp))$p.value, by = .(species)]
onetab[, fisher.test(table(ncot_grp, origin))$p.value, by = .(species)]
onetab[, fisher.test(table(ncot_grp, bls_global_grp))$p.value, by = .(species)]
# only global bls significant in both species. consistent with age.

#' conclusion:
#'   ancient ncORFs are more likely to have co-translation links.

plt <- onetab[, .N, by = .(species, ncot_grp, age_grp)]
plt[, prop := N/sum(N), by = .(species, age_grp)]

ggplot(plt[ncot_grp == 'wlinks'], aes(y = age_grp, x = prop)) +
    geom_col(fill = '#A6CEE3') +
    scale_x_continuous(labels = scales::percent,
                       expand = expand_scale(mult = c(0, 0.05))) +
    facet_grid(rows = vars(species)) +
    labs(x = 'Proporiton of ORFs', y = NULL)
ggsave('figures/ncorf_links_vs_age.pdf', width = 4, height = 3)
```

## transcription and translation heatmaps
```{r}
library(ComplexHeatmap)

m4heat_rpf <- function(dtt_rpkm, cutoff_rpkm=1, sgtype='ncORF'){
    dtt_rpkm <- dtt_rpkm[gtype == sgtype]
    ecols <- c('uid', 'len', 'gtype')
    m2 <- as.matrix(dtt_rpkm[, !..ecols])
    rownames(m2) <- dtt_rpkm[['uid']]
    m2 <- m2[, sort(colnames(m2))]
    stat <- data.table(
        id = dtt_rpkm[['uid']],
        ns = rowSums(m2 >= cutoff_rpkm),
        nz = rowSums(m2 > 0),
        max_sample = colnames(m2)[apply(m2, 1, which.max)],
        max_rpkm = apply(m2, 1, max))
    stat[, max_sample := factor(max_sample, levels = colnames(m2))]
    stat <- stat[order(max_sample, -max_rpkm)]
    m2 <- m2[stat$id, ]
   
}

colfun <- circlize::colorRamp2(c(-4, 0, 4), c("blue", "white", "red"))

# horizontal
pdf('figures/ncorf_exp_heatmap_rpf_human.pdf', width = 10, height = 5)
m <- m4heat_rpf(txl_rpkm_human)
pheatmap(
    log(m + 1), show_rownames = FALSE, color = colfun, name = 'Z score',
    scale = 'row', cluster_rows = FALSE, cluster_cols = FALSE, raster_quality = 4)
dev.off()

pdf('figures/ncorf_exp_heatmap_rpf_mouse.pdf', width = 10, height = 5)
m <- m4heat_rpf(txl_rpkm_mouse)
pheatmap(
    log(m + 1), show_rownames = FALSE, color = colfun, name = 'Z score',
    scale = 'row', cluster_rows = FALSE, cluster_cols = FALSE, raster_quality = 4)
dev.off()

# vertical
pdf('figures/ncorf_exp_heatmap_rpf_human2.pdf', width = 7, height = 7)
m <- m4heat_rpf(txl_rpkm_human)
pheatmap(
    log(t(m) + 1), show_colnames = FALSE, color = colfun, name = 'Z score',
    scale = 'column', cluster_cols = FALSE, cluster_rows = FALSE, raster_quality = 4)
dev.off()

pdf('figures/ncorf_exp_heatmap_rpf_mouse2.pdf', width = 7, height = 7)
m <- m4heat_rpf(txl_rpkm_mouse)
pheatmap(
    log(t(m) + 1), show_colnames = FALSE, color = colfun, name = 'Z score',
    scale = 'column', cluster_cols = FALSE, cluster_rows = FALSE, raster_quality = 4)
dev.off()

# RNA -----------------------------------------------------------------------
m4heat_rna <- function(ncorfs, tpm, tpm_cutoff=1){
    m <- as.matrix(tpm[, -1, with = FALSE])
    rownames(m) <- tpm[[1]]
    m <- m[, sort(colnames(m))]
    m_scale <- (m - rowMeans(m))/apply(m, 1, sd)
    # tau <- calc_tau(m)
    stat <- data.table(
        gene_id = tpm[[1]],
        # tau_rna = tau,
        ns = rowSums(m >= tpm_cutoff),
        nz = rowSums(m > 0),
        max_tpm = apply(m_scale, 1, max),
        max_sample = colnames(m)[apply(m, 1, which.max)])
    stat <- merge(ncorfs[, .(uid, gene_id)], stat, by = 'gene_id')
    stat <- stat[ns > 0]
    stat[, max_sample := factor(max_sample, levels = colnames(m))]
    stat <- stat[order(max_sample, -max_tpm)]
    m <- m[stat$gene_id, ]
}

snmap_rna_human <- setNames(
    str_to_sentence(c(
        "adrenal", "appendix", "bonem arrow", "brain", "colon", "duodenum", 
        "endometrium", "esophagus", "fallopian tube", "fat", "gall bladder", 
        "heart", "kidney", "liver", "lung", "lymphnode", "ovary", "pancreas", 
        "placenta", "prostate", "rectum", "salivary gland", "skeletal muscle", 
        "skin", "small intestine", "smooth muscle", "spleen", "stomach", 
        "testis", "thyroid", "tonsil", "urinary bladder"
    )),
    c("adrenal", "appendix", "bonemarrow", "brain", "colon", "duodenum", 
      "endometrium", "esophagus", "fallopiantube", "fat", "gallbladder", 
      "heart", "kidney", "liver", "lung", "lymphnode", "ovary", "pancreas", 
      "placenta", "prostate", "rectum", "salivarygland", "skeletalmuscle", 
      "skin", "smallintestine", "smoothmuscle", "spleen", "stomach", 
      "testis", "thyroid", "tonsil", "urinarybladder"))

path_txp_human <- 'data/expression/human_salmon_quant_32_tissues.tsv.gz'
path_txp_mouse <- 'data/expression/mouse_salmon_quant_29_tissues.tsv.gz'

pdf('figures/ncorf_exp_heatmap_rna_human.pdf', width = 10, height = 5)
m <- m4heat_rna(ncorf_human, fread(path_txp_human))
colnames(m) <- snmap_rna_human[colnames(m)]
pheatmap(
    log(m + 1), show_rownames = FALSE,
    color = colfun, name = 'Z score',
    scale = 'row',
    cluster_rows = FALSE, cluster_cols = FALSE,
    raster_quality = 4
)
dev.off()

pdf('figures/ncorf_exp_heatmap_rna_mouse.pdf', width = 10, height = 5)
m <- m4heat_rna(ncorf_mouse, fread(path_txp_mouse))
colnames(m) <- str_replace(colnames(m), '\\.', ' ')
pheatmap(
    log(m + 1), show_rownames = FALSE,
    color = colfun, name = 'Z score',
    scale = 'row',
    cluster_rows = FALSE, cluster_cols = FALSE,
    raster_quality = 4
)
dev.off()
```

<!----------------------- WGCNA analysis ------------------------->

# run WGCNA
```bash
# pwd: /nfs_data/zhangh/ncorf_mammals
# rerun with updated to use P-site counts without start/stop codons
jupyter execute ncorf_cds_wgcna_human.ipynb ncorf_cds_wgcna_mouse.ipynb
```

WGCNA power: human = 8; mouse = 19;

# analysis
```{r}
library(data.table)
library(ggplot2)
library(patchwork)
library(cols4all)
library(circlize)
library(stringr)
library(ComplexHeatmap)
library(RColorBrewer)
library(forcats)
# library(bipartite)

theme_set(theme_classic(base_size = 12) + theme(
    axis.text = element_text(color = 'black'),
    strip.background = element_blank(),
    strip.text = element_text(size = 12),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)))
```


## gene & ncORF info
```{r}
txinfo_hsa <- fread('data/Homo_sapiens.GRCh38.107.txinfo.full.tsv')
txrep_hsa <- fread('data/Homo_sapiens.GRCh38.107.txinfo.rep.pcg.tsv')

txinfo_mmu <- fread('data/Mus_musculus.GRCm39.107.txinfo.full.tsv')
txrep_mmu <- fread('data/Mus_musculus.GRCm39.107.txinfo.rep.pcg.tsv')

ncorf_human <- fread('data/ncorf_v2412/human_three_methods_ncorf.final.meta.tsv')
ncorf_mouse <- fread('data/ncorf_v2412/mouse_three_methods_ncorf.final.meta.tsv')

# ncorf_human[, gstart := as.integer(tstrsplit(uid_start, '_')[[2]])]
# ncorf_mouse[, gstart := as.integer(tstrsplit(uid_start, '_')[[2]])]
# 
# # obtain CDS start and end information
# cds_human <- fread('data/Homo_sapiens.GRCh38.107.gtf.gz', skip = 1, header = FALSE)
# cds_human <- cds_human[V3 == 'CDS']
# cds_human[, tx_name := str_extract(V9, 'transcript_id "(ENST\\d+)"', group = 1)]
# cds_human <- cds_human[, .(
#     start = ifelse(V7[1] == '+', min(V4), max(V5)),
#     end = ifelse(V7[1] == '+', max(V5), min(V4))), by = .(tx_name)]
# txrep_hsa[cds_human, `:=`(start = i.start, end = i.end), on = .(tx_name)]

```

## human WGCNA results
WGCNA results
```{r}
wgcna_cutoff_human <- 0.1

wgcna_human <- fread('data/expression_psite/human_wgcna_ncorf_cds_adjacency_tom.tsv.gz')
wgcna_human <- wgcna_human[tom > wgcna_cutoff_human & uid1 < uid2]  # 203985
wgcna_human[str_starts(uid1, 'ENS') & str_starts(uid2, 'X|Y'), c('uid1', 'uid2') := .(uid2, uid1)]
wgcna_human[, type1 := ifelse(str_starts(uid1, 'ENS'), 'CDS', 'ncORF')]
wgcna_human[, type2 := ifelse(str_starts(uid2, 'ENS'), 'CDS', 'ncORF')]
wgcna_human[, type := str_c(sort(unlist(.BY)), collapse = '-'), by = .(type1, type2)]
wgcna_human[, c('type1', 'type2') := NULL]

# LSC ncORFs enrich ncORFs w/ links?
x <- unique(c(wgcna_human$uid1, wgcna_human$uid2))
table(str_detect(x, 'ENS'))
y <- x[str_detect(x, 'ENS', negate = TRUE)]
ncorf_human[, table(uid %in% y, bls_local > 0.9 & phylocsf_pc > 0)]

fisher.test(ncorf_human[, table(uid %in% y, bls_local > 0.9 & phylocsf_pc > 0)])

# pie chart of different interactions
plt <- wgcna_human[, .(cnt = .N), by = .(type)]
plt[, prop := cnt/sum(cnt)]
plt <- plt[order(type, decreasing = TRUE)]
plt


ggplot(plt, aes(x = '', y = prop, fill = type)) +
    geom_col(width = 1) +
    geom_text(aes(label = scales::percent(prop, accuracy = 0.01),
                  y = cumsum(prop) - prop/2)) +
    coord_polar('y', start = 0, direction = 1) +
    scale_fill_discrete_c4a_cat('carto.safe', name = NULL) +
    theme_void()
ggsave('figures/human_ncORF_CDS_cotranslation_network_linkpie.pdf', width = 5, height = 3)    

```


## mouse WGCNA results
```{r}
wgcna_cutoff_mouse <- 0.01

wgcna_mouse <- fread('data/expression_psite/mouse_wgcna_ncorf_cds_adjacency_tom.tsv.gz')
wgcna_mouse <- wgcna_mouse[tom > wgcna_cutoff_mouse & uid1 < uid2]  # 425395
wgcna_mouse[str_starts(uid1, 'ENS') & str_starts(uid2, 'X|Y'), c('uid1', 'uid2') := .(uid2, uid1)]
wgcna_mouse[, type1 := ifelse(str_starts(uid1, 'ENS'), 'CDS', 'ncORF')]
wgcna_mouse[, type2 := ifelse(str_starts(uid2, 'ENS'), 'CDS', 'ncORF')]
wgcna_mouse[, type := str_c(sort(unlist(.BY)), collapse = '-'), by = .(type1, type2)]
wgcna_mouse[, c('type1', 'type2') := NULL]

# LSC ncORFs enrich ncORFs w/ links?
x <- unique(c(wgcna_mouse$uid1, wgcna_mouse$uid2))
table(str_detect(x, 'ENS'))
y <- x[str_detect(x, 'ENS', negate = TRUE)]
ncorf_mouse[, table(uid %in% y, bls_local > 0.9 & phylocsf_pc > 0)]

fisher.test(ncorf_mouse[, table(uid %in% y, bls_local > 0.9 & phylocsf_pc > 0)])

# pie chart of different interactions
plt <- wgcna_mouse[, .(cnt = .N), by = .(type)]
plt[, prop := cnt/sum(cnt)]
plt <- plt[order(type, decreasing = TRUE)]
plt

ggplot(plt, aes(x = '', y = prop, fill = type)) +
    geom_col(width = 1) +
    geom_text(aes(label = scales::percent(prop, accuracy = 0.01),
                  y = cumsum(prop) - prop/2)) +
    coord_polar('y', start = 0, direction = 1) +
    scale_fill_discrete_c4a_cat('carto.safe', name = NULL) +
    theme_void()
ggsave('figures/mouse_ncORF_CDS_cotranslation_network_linkpie.pdf', width = 5, height = 3)    
```

## co-translation between ncORF and CDS in the same gene? test with bootstrap
```{r}
# co-translation between ncORF and CDS in the same gene? test with bootstrap
bpnet_human <- wgcna_human[type == 'CDS-ncORF']
bpnet_human[ncorf_human, `:=`(gene_id = i.gene_id, gene_biotype = i.gene_biotype), on = .(uid1 = uid)]

# # only meaningful for mRNAs
bpnet_human_pcg <- bpnet_human[gene_biotype == 'protein_coding']
bpnet_human_pcg[uid2 == gene_id]  # 559
fwrite(bpnet_human_pcg[uid2 == gene_id], file = 'results/human_ncORF_mainCDS_cotranslation_pairs.tsv', sep = '\t')

set.seed(2025)
n_perm_human <- sapply(seq_len(1000), function(i){
    sum(sample(bpnet_human_pcg$uid2) == bpnet_human_pcg$gene_id)
})

ggplot(data.table(x = n_perm_human), aes(x = x)) +
    geom_histogram(binwidth = 10, fill = '#44AA99') +
    geom_vline(xintercept = 559, linetype = 2, color = 'red') +
    coord_cartesian(xlim = c(0, 600)) +
    labs(x = 'Cotranslated ncORF-CDS pairs', y = 'Frequency')
ggsave('figures/human_ncORF_mainCDS_cotranslation_permtest.pdf', width = 4, height = 3)

# exclude ncORFs overlapping with any CDS
bpnet_human_pcg2 <- bpnet_human_pcg[!uid1 %in% ncorf_human[cds_ovlp == TRUE, uid]]
bpnet_human_pcg2[uid2 == gene_id]  # 258

set.seed(2025)
n_perm_human2 <- sapply(seq_len(1000), function(i){
    sum(sample(bpnet_human_pcg2$uid2) == bpnet_human_pcg2$gene_id)
})

ggplot(data.table(x = n_perm_human2), aes(x = x)) +
    geom_histogram(binwidth = 6, fill = '#44AA99') +
    geom_vline(xintercept = 258, linetype = 2, color = 'red') +
    coord_cartesian(xlim = c(0, 300)) +
    labs(x = 'Cotranslated ncORF-CDS pairs', y = 'Frequency')
ggsave('figures/human_ncORF_mainCDS_cotranslation_permtest_NoOverlap.pdf', width = 4, height = 3)

#------------------------------------------------ Mouse -------------------------------------------
bpnet_mouse <- wgcna_mouse[type == 'CDS-ncORF']
bpnet_mouse[ncorf_mouse, `:=`(gene_id = i.gene_id, gene_biotype = i.gene_biotype), on = .(uid1 = uid)]

# # only meaningful for mRNAs
bpnet_mouse_pcg <- bpnet_mouse[gene_biotype == 'protein_coding']
bpnet_mouse_pcg[uid2 == gene_id]  # 532
fwrite(bpnet_mouse_pcg[uid2 == gene_id], file = 'results/mouse_ncORF_mainCDS_cotranslation_pairs.tsv', sep = '\t')

set.seed(2025)
n_perm_mouse <- sapply(seq_len(1000), function(i){
    sum(sample(bpnet_mouse_pcg$uid2) == bpnet_mouse_pcg$gene_id)
})

ggplot(data.table(x = n_perm_mouse), aes(x = x)) +
    geom_histogram(binwidth = 10, fill = '#44AA99') +
    geom_vline(xintercept = 532, linetype = 2, color = 'red') +
    coord_cartesian(xlim = c(0, 550)) +
    labs(x = 'Cotranslated ncORF-CDS pairs', y = 'Frequency')
ggsave('figures/mouse_ncORF_mainCDS_cotranslation_permtest.pdf', width = 4, height = 3)

# exclude ncORFs overlapping with any CDS
bpnet_mouse_pcg2 <- bpnet_mouse_pcg[!uid1 %in% ncorf_mouse[cds_ovlp == TRUE, uid]]
bpnet_mouse_pcg2[uid2 == gene_id]  # 128

set.seed(2025)
n_perm_mouse2 <- sapply(seq_len(1000), function(i){
    sum(sample(bpnet_mouse_pcg2$uid2) == bpnet_mouse_pcg2$gene_id)
})

ggplot(data.table(x = n_perm_mouse2), aes(x = x)) +
    geom_histogram(binwidth = 4, fill = '#44AA99') +
    geom_vline(xintercept = 128, linetype = 2, color = 'red') +
    coord_cartesian(xlim = c(0, 130)) +
    labs(x = 'Cotranslated ncORF-CDS pairs', y = 'Frequency')
ggsave('figures/mouse_ncORF_mainCDS_cotranslation_permtest_NoOverlap.pdf', width = 4, height = 3)
```

## Manually confirm cotranslation
```{r}
txl_human <- fread('data/expression_psite/human_RPF_counts_norm_cds_ncorf_all.tsv.gz')
m <- as.matrix(txl_human[, !c('uid', 'len', 'gtype')])
rownames(m) <- txl_human$uid

x1 <- m['ENSG00000136875', ]
x2 <- m['ENSG00000160072', ]
cor.test(x1, x2)
cor.test(x1, x2, method = 'spearman')
plot(x1, x2)

x1 <- m['1_92168972_92176862_+', ]
x2 <- m['ENSG00000105376', ]
cor.test(x1, x2)
cor.test(x1, x2, method = 'spearman')
plot(x1, x2)
cor.test(log1p(x1), log1p(x2))
plot(log1p(x1), log1p(x2))

txl_mouse <- fread('data/expression_psite/mouse_RPF_counts_norm_cds_ncorf_all.tsv.gz')
m <- as.matrix(txl_mouse[, !c('uid', 'len', 'gtype')])
rownames(m) <- txl_mouse$uid

x1 <- m['ENSMUSG00000015806', ]
x2 <- m['ENSMUSG00000051285', ]
cor.test(x1, x2)
cor.test(x1, x2, method = 'spearman')
plot(x1, x2)
cor.test(log1p(x1), log1p(x2))
plot(log1p(x1), log1p(x2))
```

## bipartite network

resources:
- network node centrality measures: https://schochastics.github.io/netAnaR/

```{r}
library(igraph)
library(clusterProfiler)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
```

```{r}
tmp <- dcast(bpnet_human, uid2 ~ uid1, fill = 0, fun.aggregate = length)
amat_human <- as.matrix(tmp[, !"uid2"])
rownames(amat_human) <- tmp$uid2
rm(tmp)

pheatmap::pheatmap(
    tmp2, clustering_method = 'ward.D',
    filename = 'figures/wgcna_ncorf_cds_human_heatmap.tiff', width = 8, height = 6,
    show_rownames = F, show_colnames = F
)

bpg_human <- graph_from_data_frame(bpnet_human[, .(uid1, uid2)], directed = FALSE)
V(bpg_human)$type <- str_starts(names(V(bpg_human)), 'ENS')
is_bipartite(bpg_human)

# cluster and plot
bpg_human_clu <- cluster_leiden(bpg_human, objective_function = 'modularity', resolution = 0.2)

V(bpg_human)$color <- fcase(
    bpg_human_clu$membership == 1, cols4all::c4a('carto.safe')[1],
    bpg_human_clu$membership == 2, cols4all::c4a('carto.safe')[2],
    default = cols4all::c4a('carto.safe')[3]
)
V(bpg_human)$shape <- ifelse(V(bpg_human)$type, "circle", "square")

pdf('figures/wgcna_ncorf_cds_human_graph.pdf', width = 12, height = 12)
plot(bpg_human, vertex.size = 1, vertex.label = NA, arrow.size = NA,
     edge.color = scales::alpha('black', 0.2),
     layout = layout_with_fr(bpg_human, niter = 10000, grid = 'nogrid'))
dev.off()

bpg_human_clu_df <- data.table(node = bpg_human_clu$names, cluster = bpg_human_clu$membership)
bpg_human_clu_df[, type := ifelse(str_starts(node, 'ENS'), 'CDS', 'ncORF')]
bpg_human_clu_df[, c_degree := degree(bpg_human, v = node)]
bpg_human_clu_df[, c_eigen := unname(eigen_centrality(bpg_human)$vector[node])]
bpg_human_clu_df[, c_bet := unname(betweenness(bpg_human)[node])]
bpg_human_clu_df[type == 'CDS', is_hub := c_bet > quantile(c_bet, 0.80), by = .(cluster)]
bpg_human_clu_df[, is_hub := ifelse(is.na(is_hub), FALSE, is_hub)]

bpg_human_clu_df[, cluster := factor(cluster, levels = names(sort(-table(bpg_human_clu_df$cluster))))]
bpg_human_clu_df[, cluster := as.factor(as.integer(cluster))]
bpg_human_clu_df <- bpg_human_clu_df[order(cluster, type, -degree)]

bpg_human_clu_df[type == 'CDS', .(total = .N, hub = sum(is_hub)), keyby = .(cluster)][order(-total)][1:5]


tmp <- amat_human[bpg_human_clu_df[type == 'CDS', node], bpg_human_clu_df[type == 'ncORF', node]]

arow_human <- bpg_human_clu_df[type == 'CDS']
arow_human[, cluster := fct_collapse(cluster, 'Cluster 1' = '1', 'Cluster 2' = '2', other_level = 'Other')]
arow_human <- as.data.frame(arow_human[, .(cluster)])
rownames(arow_human) <- bpg_human_clu_df[type == 'CDS', node]

acol_human <- bpg_human_clu_df[type == 'ncORF']
acol_human[, cluster := fct_collapse(cluster, 'Cluster 1' = '1', 'Cluster 2' = '2', other_level = 'Other')]
acol_human <- as.data.frame(acol_human[, .(cluster)])
rownames(acol_human) <- bpg_human_clu_df[type == 'ncORF', node]

ann_colors <- list(cluster = setNames(c4a('carto.safe')[1:4], levels(acol_human$cluster)))

dev.off()
pheatmap::pheatmap(
    tmp, clustering_method = 'ward.D',
    cluster_rows = F, cluster_cols = F,
    show_rownames = F, show_colnames = F, legend = F,
    annotation_col = acol_human, annotation_row = arow_human,
    annotation_colors = ann_colors,
    color = c('grey', 'black'),
    filename = 'figures/wgcna_bpnet_human.tiff',
    width = 6, height = 6)

bpg_human_hubgo <- enrichGO(
    gene = bpg_human_clu_df[cluster == '1' & type == 'CDS' & is_hub, node],
    org.Hs.eg.db, keyType = 'ENSEMBL', ont = 'ALL')
bpg_human_hubgo <- clusterProfiler::simplify(bpg_human_hubgo)
h1 <- as.data.table(as.data.frame(bpg_human_hubgo))

bpg_human_hubgo2 <- enrichGO(
    gene = bpg_human_clu_df[cluster == '2' & type == 'CDS' & is_hub, node],
    org.Hs.eg.db, keyType = 'ENSEMBL', ont = 'ALL')
bpg_human_hubgo2 <- clusterProfiler::simplify(bpg_human_hubgo2)
h2 <- as.data.table(as.data.frame(bpg_human_hubgo2))

plt <- rbind('Cluster 1' = h1, 'Cluster 2' = h2, idcol = 'cluster')
plt <- plt[order(cluster, p.adjust)]
plt[, Description := factor(Description, levels = rev(Description))]
plt <- plt[, .SD[1:5], by = .(cluster)]

ggplot(plt, aes(x = -log10(p.adjust), y = Description, fill = cluster)) +
    geom_col(width = 0.8, show.legend = FALSE) +
    scale_fill_discrete_c4a_cat('carto.safe') +
    facet_wrap(facets = vars(cluster), scales = 'free', drop = TRUE, ncol = 1) +
    labs(y = NULL, x = '-log10(Padj)', fill = NULL) +
    scale_x_continuous(expand = expansion(mult = c(0, 0.02)))
ggsave('figures/wgcna_bpnet_human_go.pdf', width = 6, height = 6)

```


```{r}
tmp <- dcast(bpnet_mouse, uid2 ~ uid1, fill = 0, fun.aggregate = length)
amat_mouse <- as.matrix(tmp[, !"uid2"])
rownames(amat_mouse) <- tmp$uid2
rm(tmp)

pheatmap::pheatmap(
    amat_mouse, clustering_method = 'ward.D',
    filename = 'figures/wgcna_ncorf_cds_mouse_heatmap.tiff', width = 8, height = 6,
    show_rownames = F, show_colnames = F
)

bpg_mouse <- graph_from_data_frame(bpnet_mouse[, .(uid1, uid2)], directed = FALSE)
V(bpg_mouse)$type <- str_starts(names(V(bpg_mouse)), 'ENS')
is_bipartite(bpg_mouse)

# cluster and plot
bpg_mouse_clu <- cluster_leiden(bpg_mouse, objective_function = 'modularity', resolution = 0.2)
V(bpg_mouse)$color <- fcase(
    bpg_mouse_clu$membership == 2, cols4all::c4a('carto.safe')[1],
    bpg_mouse_clu$membership == 5, cols4all::c4a('carto.safe')[2],
    bpg_mouse_clu$membership == 11, cols4all::c4a('carto.safe')[3],
    bpg_mouse_clu$membership == 1, cols4all::c4a('carto.safe')[4],
    bpg_mouse_clu$membership == 3, cols4all::c4a('carto.safe')[5],
    default = cols4all::c4a('carto.safe')[6]
)
V(bpg_mouse)$shape <- ifelse(V(bpg_mouse)$type, "circle", "square")
# CDS: circle; ncORF, square

pdf('figures/wgcna_ncorf_cds_mouse_graph.pdf', width = 12, height = 12)
plot(bpg_mouse, vertex.size = 1, vertex.label = NA, arrow.size = NA,
     edge.color = scales::alpha('black', 0.2),
     layout = layout_with_fr(bpg_mouse, niter = 10000, grid = 'nogrid'))
dev.off()

bpg_mouse_clu_df <- data.table(node = bpg_mouse_clu$names, cluster = bpg_mouse_clu$membership)
bpg_mouse_clu_df[, type := ifelse(str_starts(node, 'ENS'), 'CDS', 'ncORF')]
bpg_mouse_clu_df[, c_degree := degree(bpg_mouse, v = node)]
bpg_mouse_clu_df[, c_eigen := unname(eigen_centrality(bpg_mouse)$vector[node])]
bpg_mouse_clu_df[, c_bet := unname(betweenness(bpg_mouse)[node])]
bpg_mouse_clu_df[type == 'CDS', is_hub := c_bet > quantile(c_bet, 0.80), by = .(cluster)]
bpg_mouse_clu_df[, is_hub := ifelse(is.na(is_hub), FALSE, is_hub)]

bpg_mouse_clu_df[, cluster := factor(cluster, levels = names(sort(-table(bpg_mouse_clu_df$cluster))))]
bpg_mouse_clu_df <- bpg_mouse_clu_df[order(cluster, type, -c_degree)]

bpg_mouse_clu_df[type == 'CDS', .(total = .N, hub = sum(is_hub)), keyby = .(cluster)][order(-total)][1:5]


tmp <- amat_mouse[bpg_mouse_clu_df[type == 'CDS', node], bpg_mouse_clu_df[type == 'ncORF', node]]

arow_mouse <- bpg_mouse_clu_df[type == 'CDS']
arow_mouse[, cluster := fct_collapse(cluster, 'Cluster 1' = '2', 'Cluster 2' = '5', 'Cluster 3' = '11', other_level = 'Other')]
arow_mouse <- as.data.frame(arow_mouse[, .(cluster)])
rownames(arow_mouse) <- bpg_mouse_clu_df[type == 'CDS', node]

acol_mouse <- bpg_mouse_clu_df[type == 'ncORF']
acol_mouse[, cluster := fct_collapse(cluster, 'Cluster 1' = '2', 'Cluster 2' = '5', 'Cluster 3' = '11', other_level = 'Other')]
acol_mouse <- as.data.frame(acol_mouse[, .(cluster)])
rownames(acol_mouse) <- bpg_mouse_clu_df[type == 'ncORF', node]

ann_colors <- list(cluster = setNames(c4a('carto.safe')[1:4], levels(acol_mouse$cluster)))

dev.off()
pheatmap::pheatmap(
    tmp, clustering_method = 'ward.D',
    cluster_rows = F, cluster_cols = F,
    show_rownames = F, show_colnames = F, legend = F,
    annotation_col = acol_mouse, annotation_row = arow_mouse,
    annotation_colors = ann_colors,
    color = c('grey', 'black'),
    filename = 'figures/wgcna_bpnet_mouse.tiff',
    width = 6, height = 6)


bpg_mouse_hubgo2 <- enrichGO(
    gene = bpg_mouse_clu_df[cluster == '2' & type == 'CDS' & is_hub, node],
    org.Mm.eg.db, keyType = 'ENSEMBL', ont = 'ALL')
bpg_mouse_hubgo2 <- clusterProfiler::simplify(bpg_mouse_hubgo2)
m2 <- as.data.table(as.data.frame(bpg_mouse_hubgo2))
m2 <- m2[order(p.adjust, str_length(Description))][!duplicated(p.adjust)]

bpg_mouse_hubgo5 <- enrichGO(
    gene = bpg_mouse_clu_df[cluster == '5' & type == 'CDS' & is_hub, node],
    org.Mm.eg.db, keyType = 'ENSEMBL', ont = 'ALL')
bpg_mouse_hubgo5 <- clusterProfiler::simplify(bpg_mouse_hubgo5)
m5 <- as.data.table(as.data.frame(bpg_mouse_hubgo5))
m5 <- m5[order(p.adjust)][!duplicated(p.adjust)]

bpg_mouse_hubgo11 <- enrichGO(
    gene = bpg_mouse_clu_df[cluster == '11' & type == 'CDS' & is_hub, node],
    org.Mm.eg.db, keyType = 'ENSEMBL', ont = 'ALL')
bpg_mouse_hubgo11 <- clusterProfiler::simplify(bpg_mouse_hubgo11)
m11 <- as.data.table(as.data.frame(bpg_mouse_hubgo11))
m11 <- m11[order(p.adjust, Description)][!duplicated(p.adjust)]

plt <- rbind('Cluster 1' = m2, 'Cluster 2' = m5, 'Cluster 3' = m11, idcol = 'cluster')
plt <- plt[order(cluster, p.adjust)]
plt[, Description := factor(Description, levels = rev(Description))]
plt <- plt[, .SD[1:5], by = .(cluster)]

ggplot(plt, aes(x = -log10(p.adjust), y = Description, fill = cluster)) +
    geom_col(width = 0.8, show.legend = FALSE) +
    scale_fill_discrete_c4a_cat('carto.safe') +
    facet_wrap(facets = vars(cluster), scales = 'free', drop = TRUE, ncol = 1) +
    labs(y = NULL, x = '-log10(Padj)', fill = NULL) +
    scale_x_continuous(expand = expansion(mult = c(0, 0.02)))
ggsave('figures/wgcna_bpnet_mouse_go.pdf', width = 6, height = 6)
```

export graph data for testing networkx
```{r}
fwrite(bpnet_human, file = 'results/bpnet_human_edges.tsv.gz', sep = '\t')
fwrite(bpg_human_clu_df, file = 'results/bpnet_human_vertexes.tsv.gz', sep = '\t')

fwrite(bpnet_mouse, file = 'results/bpnet_mouse_edges.tsv.gz', sep = '\t')
fwrite(bpg_mouse_clu_df, file = 'results/bpnet_mouse_vertexes.tsv.gz', sep = '\t')
```